<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="morphfilter~" module="hirt">

	<digest>
		Buffer-based filtering with morphing gain
	</digest>

	<description>
		Build and cascade shelf and peak/notch filters and apply them to the contents of a buffer, with morphing gain over the duration of the buffer in realtime playback.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Alex Harker</metadata>
		<metadata name="tag">HIRT</metadata>
		<metadata name="tag">HIRT Objects</metadata>
		<metadata name="tag">HIRT Buffer</metadata>
		<metadata name="tag">MSP Filters</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The <m>process</m>, <m>addfilter</m> and <m>clear</m> messages
			</digest>
			<description>
				The <m>addfilter</m> message adds a filter to the cascade. The <m>clear</m> message deletes all filters. The <m>process</m> message computes the filtering.
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				<m>Bang</m> on completion of <b>process</b>
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="NONE" optional="0" type="none">
			<digest>
				No arguments for <o>morphfilter~</o>
			</digest>
			<description>
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="addfilter">
			<arg name="filter_type" optional="0" type="symbol" />
			<arg name="centre_frequency" optional="1" type="float" />
			<arg name="q_or_s" optional="1" type="float" />
			<arg name="starting_gain" optional="1" type="float" />
			<arg name="gain_alteration_amount" optional="1" type="float" />
			<arg name="gain_amount_rate" optional="1" type="float" />
			<digest>
				Add a filter
			</digest>
			<description>
				Syntax: <b>addfilter <m>&lt;symbol: filter_type&gt;</m> <m>[&lt;float: centre_frequency&gt;]</m> <m>[&lt;float: q_or_s&gt;]</m> <m>[&lt;float: starting_gain&gt;]</m> <m>[&lt;float: gain_alteration_amount&gt;]</m> <m>[&lt;float: gain_amount_rate&gt;]</m> </b><br />				<br />
				Create and/or update a single filter by specifying filter type and filter parameters as a list. <o>morphfilter~</o> supports up to <b>16</b> cascaded filters. One filter is added per <m>addfilter</m> message. <br />
				The arguments to <m>addfilter</m> are: filter type / [centre frequency] / [q or s] / [starting gain] / [gain alteration amount] / [gain amount rate]. <br />
				<b>gain alteration amount</b> refers to the gain step in <b>dB</b> over which a filter specification is computed (initially from <b>starting gain</b> to <b>gain alteration amount</b>, <br />
				then in steps of <b>gain alteration amount</b>), over the course of a time granularity specified by the <b>gain amount rate</b> argument (in <b>ms</b>), <br />
				active for the duration of the buffer being processed. A change is only applied if <b>gain amount rate</b> is &gt; <b>0.0</b>. <br />
				<b>gain amount rate</b> specifies the sampling rate dependent speed in <b>ms</b> over which the gain change of the specified <b>gain alteration amount</b> takes place. <br />
				<m>addfilter</m> does not update the output buffer. To compute, use the <m>process</m> message. <br />
				The default filter type is <b>gain</b>. <br />
			</description>
		</method>
		<method name="clear">
			<arglist />
			<digest>
				Clear filter(s)
			</digest>
			<description>
				Clear all currently loaded filters <br />
			</description>
		</method>
		<method name="process">
			<arg name="target_buffer" optional="0" type="symbol" />
			<arg name="source_buffer" optional="0" type="symbol" />
			<digest>
				Process filter(s)
			</digest>
			<description>
				Syntax: <b>process <m>&lt;symbol: target_buffer&gt;</m> <m>&lt;symbol: source_buffer&gt;</m> </b><br />				<br />
				Once filtering parameters have been updated (<m>addfilter</m>), compute the filter(s) and push result to output <o>buffer~</o>. <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>buffer~</o>based filtering with morphing gain. Available filter types are: <b>lowshelf</b>, <b>highshelf</b>, <b>peaknotch</b> and <b>gain</b>-only. <o>morphfilter~</o> supports up to <b>16</b> cascaded filters. Internally <o>morphfilter~</o> processes at double precision (64-bit) but copies from and writes to the 32-bit-only MSP <o>buffer~</o>. The <o>hirt.convolutionreverb~</o> uses <o>morphfilter~</o> to apply frequency dependent damping by filtering impulse responses.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="biquad~" />
		<seealso name="buffer~" />
		<seealso name="filtercoeff~" />
		<seealso name="filtergraph~" />
		<seealso name="bufconvolve~" />
		<seealso name="bufresample~" />
		<seealso name="bufreverse~" />
		<seealso name="multiconvolve~" />
		<seealso name="spectrumdraw~" />
		<seealso name="iralign~" />
		<seealso name="iraverage~" />
		<seealso name="irextract~" />
		<seealso name="irinvert~" />
		<seealso name="irmeasure~" />
		<seealso name="irnonlin~" />
		<seealso name="irphase~" />
		<seealso name="irplapprox~" />
		<seealso name="irreference~" />
		<seealso name="irstats~" />
		<seealso name="irsweeps~" />
		<seealso name="irtransaural~" />
		<seealso name="irtrimnorm~" />
		<seealso name="iruser~" />
		<seealso name="irvalue~" />
		<seealso name="hirt.convolutionreverb~" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (messages)">
			<description>
				The <m>process</m>, <m>addfilter</m> and <m>clear</m> messages.
				The <m>addfilter</m> message adds a filter to the cascade. The <m>clear</m> message deletes all filters. The <m>process</m> message computes the filtering.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (bang)">
			<description>
				<m>Bang</m> on completion of <b>process</b>.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>buffer~</o>based filtering with morphing gain. Available filter types are: <b>lowshelf</b>, <b>highshelf</b>, <b>peaknotch</b> and <b>gain</b>-only. <o>morphfilter~</o> supports up to <b>16</b> cascaded filters. Internally <o>morphfilter~</o> processes at double precision (64-bit) but copies from and writes to the 32-bit-only MSP <o>buffer~</o>. The <o>hirt.convolutionreverb~</o> uses <o>morphfilter~</o> to apply frequency dependent damping by filtering impulse responses.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
buffer, filter.
			</description>
		</entry>
	</misc>

</c74object>